# Config file
# ===========
#    Testing on a LOCAL network
#        Setting Network to LOCAL will inform the code what you
#        are doing.  At some point we can be smarter.
#
#        create a directory in your home folder called .pegnet
#
#        copy this default configuration to that directory
#
#        If you are running a multiple miners, then you can update this config
#        and be happy.
#
#        Note that the ECAddress and FCTAddress are those from the local network
#        and must be replaced with yours for the public network.
#
#        Also note that the APILayerKey is bogus.  Must be replaced with yours.
#
#    Testing on MAIN
#        Make sure your ECAddress is funded.
#
#        If you want the code to auto buy ECs for you, then give it a FCT address
#        that has a balance and that is controlled by factom-walletd
#
#        create a directory in your home folder called .pegnet
#
#        copy this default configuration to that directory
#
#        If you are running multiple miners, then you can update this config
#        and be happy.
#
#    Address conversions
#        Use the PegNet cli (pncli) to convert FCT addresses to PegNet Addresses
#
#        Run pncli without parameters to get commands.  Run pncli help <cmd> for
#        help on a particular command

[Debug]
# Randomize adds a random factor +/- the give percent.  3.1 for 3.1%
  Randomize=0.0
# Turns on logging so the user can see the OPRs and mining balances as they update
  Logging=true
# Puts the logs in a file.  If not specified, logs are written to stdout
  LogFile=

[Database]
  # $PEGNETHOME defaults to ~/.pegnet
  MinerDatabase=$PEGNETHOME/data_$PEGNETNETWORK/miner.ldb
  MinerDatabaseType=ldb

  # Location of the `pegnet node` sqlite db
  NodeDatabase=$PEGNETHOME/data_$PEGNETNETWORK/node.sqlite

[API]
  APIPort=8099
  ControlPanelPort=8080

[Staker]
  # Factom Connection Options (if using Docker, use values below)
  # FactomdLocation="localhost:8088"
  # WalletdLocation="localhost:8089"

  # If Walletd is configured to use RPC Username and Password, add the credentials here
  WalletdUser=""
  WalletdPass=""

  # Docker container connection options
  FactomdLocation="factomd:8088"
  WalletdLocation="walletd:8089"

  Protocol=PegNet
  Network=MainNet

  # For LOCAL network testing, EC private key is
  # Es2XT3jSxi1xqrDvS5JERM3W3jh1awRHuyoahn3hbQLyfEi1jvbq EC3TsJHUs8bzbbVnratBafub6toRYdgzgbR7kWwCW4tqbmyySRmg
  # Replace with your EC address with MainNet
  ECAddress=EC3TsJHUs8bzbbVnratBafub6toRYdgzgbR7kWwCW4tqbmyySRmg

  # This is your address.  Generate a FCT address and put it here, so if you win, you will be rewarded!
  CoinbaseAddress=CHANGEME

[Miner]
  # Factom Connection Options (if using Docker, use values below)
  FactomdLocation="localhost:8088"
  WalletdLocation="localhost:8089"

  # If Walletd is configured to use RPC Username and Password, add the credentials here
  WalletdUser=""
  WalletdPass=""

  # Docker container connection options
  # FactomdLocation="factomd:8088"
  # WalletdLocation="walletd:8089"

  # Options to setup a networked miner to a coordinator
  MiningCoordinatorPort=:7777
  MiningCoordinatorHost=localhost:7777
  # This is used to authenticate via challenge + response to the coordinator.
  # If the coordinator and miner have different secrets, they will not connect to each
  # other.
  CoordinatorSecret="hunter2"
  UseCoordinatorAuthentication=true

  NumberOfMiners=1
# The number of records to submit per block. The top N records are chosen, where N is the config value
  RecordsPerBlock=3

# The targeted cutoff. If our difficulty will land us in the top 300 (estimated), we will submit our OPR.
# <=0 will disable this check.
  SubmissionCutOff=200
  Protocol=PegNet
  Network=MainNet

  # For LOCAL network testing, EC private key is
  # Es2XT3jSxi1xqrDvS5JERM3W3jh1awRHuyoahn3hbQLyfEi1jvbq EC3TsJHUs8bzbbVnratBafub6toRYdgzgbR7kWwCW4tqbmyySRmg
  ECAddress=EC3TsJHUs8bzbbVnratBafub6toRYdgzgbR7kWwCW4tqbmyySRmg

  # For LOCAL network testing, we have a public FCT address for your use.
  #
  # FCT private key
  #     Fs3E9gV6DXsYzf7Fqx1fVBQPQXV695eP3k5XbmHEZVRLkMdD9qCK
  # FCT public key
  #     FA2jK2HcLnRdS94dEcU27rF3meoJfpUcZPSinpb7AwQvPRY6RL1Q

  # This is your address.  Generate a FCT address and put it here, so if you win, you will be rewarded!
  CoinbaseAddress=CHANGEME

  # The IdentityChain is to be the name of the miner's Identity.  To be used
  # when we integrate DIDs with the PegNet.  Now it acts like a public memo
  # field on your OPR records.
  IdentityChain=prototype
[Oracle]

  # Must get a key from here https://apilayer.com/
  APILayerKey=CHANGEME
  # Must get an api key here https://openexchangerates.org/
  OpenExchangeRatesKey=CHANGEME
  # Must get an api key here https://coinmarketcap.com/api/
  CoinMarketCapKey=CHANGEME
  # Must get an api key here https://1forge.com/forex-data-api
  1ForgeKey=CHANGEME

  # If a quote is beyond this time old, we will fallback to additional
  # datasources, and return the most recent price quote we can find.
  StaleQuoteDuration=30m


# This section must ONLY include data sources and their priorities. Any configuration
# related to a source should be specified in the [Oracle] section.
# -1 == disabled
[OracleDataSources]
  # Always rank this the highest at 0. It pegs USD at 1USD = 1USD.
  # This is not a website, this is a hardcoded '1'. Don't change this
  FixedUSD=0

  # ----------------
  # Paid Sources
  APILayer=-1
  1Forge=-1

  # ----------------
  # Free sources, signup required
  CoinMarketCap=-1
  #   Hourly data for the commodities
  OpenExchangeRates=9

  # ----------------
  #  Free sources, no signup required
  FreeForexAPI=3
  AlternativeMe=2
  CoinCap=-1
  PegnetMarketcap=-1
  CoinGecko=-1

  #   Web scraping, rank it low
  Kitco=-1


# This section should be done with caution. There is no error handling
# if you put in a bad order or use datasources that you did not enable.
[OracleAssetDataSourcesPriority]
  # Example to overrride BTC order
  # XBT=CoinMarketCap,OpenExchangeRates,CoinCap
